(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Rows' object has no attribute 'id'"
p3
sS'layer'
p4
S'/home/hogu/Documenten/projects/web2py/applications/mvh/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\nimport datetime\nimport calendar\n\n\nTODO = "Under construction ! Available soon."\n\n\ndef huidige_datum():\n    return datetime.datetime.now()\n\ndef huidig_jaar():\n    return datetime.datetime.now().year\n\n\ndef begin_einde_huidige_maand():\n    vandaag = huidige_datum()\n    eerste_dag = 1\n    laatste_dag = calendar.monthrange(vandaag.year, vandaag.month)[1]\n    begin_maand = datetime.date(vandaag.year, vandaag.month, eerste_dag)\n    einde_maand = datetime.date(vandaag.year, vandaag.month, laatste_dag)\n    return begin_maand, einde_maand\n\n\ndef index():\n    begin_maand, einde_maand = begin_einde_huidige_maand()\n    query = ((db.wedstrijd.datum >= begin_maand)&\n            (db.wedstrijd.datum <= einde_maand))\n    wedstrijden = SQLFORM.grid(query,\n                        create=False, details=False, csv=False,\n                        fields=[db.wedstrijd.datum, db.wedstrijd.omschrijving],\n                        field_id=db.wedstrijd.id,\n                        sortable=False,\n                        searchable=False,\n                        orderby=db.wedstrijd.datum\n                        )\n    return dict(wedstrijden=wedstrijden)\n\n\ndef kalender():\n    #jaar = str(huidig_jaar())\n    jaar = "2003"\n    huidige_kalender = db(db.kalender.jaar==jaar).select()\n    print "huidige_kalender : ", huidige_kalender\n    print "huidige_kalender.id : ", huidige_kalender.id\n    print "huidige_kalender.jaar : ", huidige_kalender.jaar\n    wedstrijden = (\n        db(db.wedstrijd.kalender==4).select(db.wedstrijd.datum,\n                                                   db.wedstrijd.omschrijving,\n                                                   orderby=db.wedstrijd.datum))\n    return dict(kalender=kalender, wedstrijden=wedstrijden, huidig_jaar=huidig_jaar)\n\n\ndef uitslagen():\n    return dict(message=TODO)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(kalender)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/hogu/Documenten/projects/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/hogu/Documenten/projects/web2py/applications/mvh/controllers/default.py", line 120, in <module>\n  File "/home/hogu/Documenten/projects/web2py/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/hogu/Documenten/projects/web2py/applications/mvh/controllers/default.py", line 54, in kalender\n    print "huidige_kalender.id : ", huidige_kalender.id\nAttributeError: \'Rows\' object has no attribute \'id\'\n'
p11
s.